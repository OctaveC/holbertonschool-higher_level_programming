Importing our module
    >>> text_indentation = __import__("5-text_indentation").text_indentation

Checking if you've written documentation for your module
    >>> docu = __import__("5-text_indentation").__doc__
    >>> len(docu) > 5
    True

Checking if you've written documentation for your function
    >>> docu2 = __import__("5-text_indentation").text_indentation.__doc__
    >>> len(docu2) > 5
    True

Standard use with . ? and :
    >>> text_indentation("This.Should?Print:Nicely")
    This.
    <BLANKLINE>
    Should?
    <BLANKLINE>
    Print:
    <BLANKLINE>
    Nicely

Test without . ? and :
    >>> text_indentation("This should print")
    This should print

Test with an empty string
    >>> text_indentation("")

Test with three spaces should print nothing
    >>> text_indentation("   ")

Test with three leading spaces should not print them
    >>> text_indentation("   This should print")
    This should print

Test with three following spaces should print them
    >>> text_indentation("This should print   ")
    This should print   

Test with only . ? and :
    >>> text_indentation("???...:?.::")
    ?
    <BLANKLINE>
    ?
    <BLANKLINE>
    ?
    <BLANKLINE>
    .
    <BLANKLINE>
    .
    <BLANKLINE>
    .
    <BLANKLINE>
    :
    <BLANKLINE>
    ?
    <BLANKLINE>
    .
    <BLANKLINE>
    :
    <BLANKLINE>
    :
    <BLANKLINE>

Test with a non-string
    >>> text_indentation([1, 32, 45])
    Traceback (most recent call last):
    	...
    TypeError: text must be a string

With no arguments
    >>> text_indentation()
    Traceback (most recent call last):
    	      ...
    TypeError: text_indentation() missing 1 required positional argument: 'text'

With too many arguments
    >>> text_indentation("This:should?print.nicely", "other:string.")
    Traceback (most recent call last):
    	      ...
    TypeError: text_indentation() takes 1 positional argument but 2 were given
